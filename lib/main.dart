import 'package:flutter/material.dart';//新追加基类class Meta {  double      price;  String      name;  Meta(this.name, this.price);}//追加打印方法类 - 抽象类// 可以理解为模板方法定义头文件// 使用 with 混入继承, 在子类中实现方法abstract class PrintHelper {  printInfo()=>print(getInfo());  getInfo();}//定义商品Item类class Item extends Meta with PrintHelper {  int         count;  // 语法糖构造方法//  Item(this.name, this.price);  // 继承 Meta 后的构造方法//  Item(name, price, count) : super(name, price, count);  Item({name, price, count}): this.withInitParams(name: name, price: price, count: count);  Item.withInitParams({name, price, this.count}) : super(name, price);  double get totalPrice => this.price * this.count;  Item operator+(Item item) => Item(name: name+item.name,                                  price: totalPrice+item.totalPrice,                                  count:  count+item.count);  @override  getInfo() => '''        商品名:  $name         单价: $price        数量: $count  ''';}//定义购物车类class ShoppingCart extends Meta with PrintHelper {  DateTime    date;  String      code;  List<Item>  bookings;  ShoppingCart({name}) : this.withCode(name:name, code:null);  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name, 0);    double get price => bookings.reduce((value, element)=>value+element).totalPrice;  getBookingInfo() {    String str = "";    for (Item item in bookings) {      str += item.getInfo();    }    return str;  }  getInfo() => '''  购物车信息:  -------------------------------    用户名: $name    优惠码: ${code??"没有"}    总价: $price    Date: $date    商品列表:         ${ getBookingInfo() }  -------------------------------    ''';}void main() {//  ShoppingCart sc = ShoppingCart('张三', '123456');  ShoppingCart.withCode(name:'李四')  ..bookings = [Item.withInitParams(name: '苹果', price: 10.0, count: 10),                Item.withInitParams(name: '鸭梨', price: 20.0, count: 50)]  ..printInfo();  ShoppingCart.withCode(name: '张三', code: '123')  ..bookings = [Item.withInitParams(name: '鸭梨', price: 20.0, count: 50)]  ..printInfo();}